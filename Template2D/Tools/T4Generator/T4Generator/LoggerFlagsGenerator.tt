<#@ template hostspecific="false" language="C#" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
#>
/* --------------------------
 *
 * LoggerFlags.cs
 *
 * Description: Generated class for flags used in the Logger class.
 *
 * Starvoxel
 *
 * All rights reserved.
 *
 * WARNING: THIS IS A GENERATED CLASS.  ALL MANUAL CHANGES IN HERE WILL BE OVERWRITTEN WHEN RE-GENERATED.
 * TO ADD FLAGS TO THIS FILE, PLEASE CREATE A PROPER .lfi FILE WITH THE FLAG NAME THAT YOU WOULD LIKE.
 *
 * -------------------------- */

#region Includes
#region System Includes
using System;
using System.Collections;
using System.Collections.Generic;
#endregion

#region Other Includes

#endregion
#endregion


namespace Starvoxel
{
    public partial class eLoggerFlags
    {
<#	if (FlagNames != null && FlagNames.Length > 0) 
    {#>
<#		for (int i = 0; i < FlagNames.Length; ++i)
		{#>
        public static readonly eLoggerFlags <#=FlagNames[i]#> = new eLoggerFlags(1 << <#=StartingValue + i#>);
<#		}#>

        public static readonly eLoggerFlags[] CUSTOM_FLAGS = new eLoggerFlags[] { <#for (int i = 0; i < FlagNames.Length; ++i) { if (i != 0){#>, <#}#><#=FlagNames[i]#><#}#>};
		
        static partial void GetPartialEnumValues(ref eLoggerFlags[] flags)
        {
            List<eLoggerFlags> flagList = new List<eLoggerFlags>(flags);

            flagList.AddRange(CUSTOM_FLAGS);

            flags = flagList.ToArray();
        }
<#  }
	else
	{#>
        SOMETHING WENT WRONG!
        */
<#  }#>
    }
}